// <auto-generated />
using System;
using BookingWeb.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookingWeb.Server.Migrations
{
    [DbContext(typeof(BookingBusContext))]
    partial class BookingBusContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookingWeb.Server.Models.Benxe", b =>
                {
                    b.Property<int>("IdBenXe")
                        .HasColumnType("int")
                        .HasColumnName("ID_BenXe");

                    b.Property<int?>("IdTinhThanh")
                        .HasColumnType("int")
                        .HasColumnName("ID_TinhThanh");

                    b.Property<string>("TenBenXe")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdBenXe")
                        .HasName("PK__benxe__5D85FA845457C57C");

                    b.HasIndex("IdTinhThanh");

                    b.ToTable("benxe", (string)null);
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Chuyenxe", b =>
                {
                    b.Property<int>("IdChuyenXe")
                        .HasColumnType("int")
                        .HasColumnName("ID_ChuyenXe");

                    b.Property<int?>("IdTuyenDuong")
                        .HasColumnType("int")
                        .HasColumnName("ID_TuyenDuong");

                    b.Property<int?>("IdXe")
                        .HasColumnType("int")
                        .HasColumnName("ID_Xe");

                    b.Property<DateTime?>("ThoiGianDen")
                        .HasColumnType("datetime")
                        .HasColumnName("Thoi_GianDen");

                    b.Property<DateTime?>("ThoiGianKh")
                        .HasColumnType("datetime")
                        .HasColumnName("Thoi_GianKH");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdChuyenXe")
                        .HasName("PK__chuyenxe__108DC34AC2F09492");

                    b.HasIndex("IdTuyenDuong");

                    b.HasIndex("IdXe");

                    b.ToTable("chuyenxe", (string)null);
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Loaixe", b =>
                {
                    b.Property<int>("IdLoai")
                        .HasColumnType("int")
                        .HasColumnName("ID_Loai");

                    b.Property<int?>("SoGhe")
                        .HasColumnType("int")
                        .HasColumnName("So_Ghe");

                    b.Property<string>("TenLoai")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Ten_Loai");

                    b.HasKey("IdLoai")
                        .HasName("PK__loaixe__914C2314CF7F9441");

                    b.ToTable("loaixe", (string)null);
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Nguoidung", b =>
                {
                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("ID_User");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Dia_Chi");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("HoTen")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Ho_Ten");

                    b.Property<int?>("IdAccount")
                        .HasColumnType("int")
                        .HasColumnName("ID_Account");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.HasKey("IdUser")
                        .HasName("PK__nguoidun__ED4DE4426067B775");

                    b.HasIndex("IdAccount");

                    b.ToTable("nguoidung", (string)null);
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Phanquyen", b =>
                {
                    b.Property<int>("IdQuyen")
                        .HasColumnType("int")
                        .HasColumnName("ID_Quyen");

                    b.Property<string>("TenQuyen")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdQuyen")
                        .HasName("PK__phanquye__D219AE52A6951B83");

                    b.ToTable("phanquyen", (string)null);
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Phieudat", b =>
                {
                    b.Property<int>("IdPhieu")
                        .HasColumnType("int")
                        .HasColumnName("ID_Phieu");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("ID_User");

                    b.Property<DateOnly?>("NgayLap")
                        .HasColumnType("date")
                        .HasColumnName("Ngay_Lap");

                    b.Property<decimal?>("TongTien")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("Tong_Tien");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdPhieu")
                        .HasName("PK__phieudat__E61CE97E43D3D4D5");

                    b.HasIndex("IdUser");

                    b.ToTable("phieudat", (string)null);
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Taikhoan", b =>
                {
                    b.Property<int>("IdAccount")
                        .HasColumnType("int")
                        .HasColumnName("ID_Account");

                    b.Property<int?>("IdQuyen")
                        .HasColumnType("int")
                        .HasColumnName("ID_Quyen");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdAccount")
                        .HasName("PK__taikhoan__213379EBC673E920");

                    b.HasIndex("IdQuyen");

                    b.ToTable("taikhoan", (string)null);
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Thanhtoan", b =>
                {
                    b.Property<int>("IdThanhToan")
                        .HasColumnType("int")
                        .HasColumnName("ID_ThanhToan");

                    b.Property<int?>("IdPhieuDat")
                        .HasColumnType("int")
                        .HasColumnName("ID_PhieuDat");

                    b.Property<string>("PhuongThucTt")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PhuongThuc_TT");

                    b.Property<decimal?>("SoTien")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("So_Tien");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdThanhToan")
                        .HasName("PK__thanhtoa__AB2E563157EAFBD3");

                    b.HasIndex("IdPhieuDat");

                    b.ToTable("thanhtoan", (string)null);
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Tinhthanh", b =>
                {
                    b.Property<int>("IdTinhThanh")
                        .HasColumnType("int")
                        .HasColumnName("ID_TinhThanh");

                    b.Property<string>("TenTinhThanh")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Ten_TinhThanh");

                    b.HasKey("IdTinhThanh")
                        .HasName("PK__tinhthan__BC0EB70B259D3B97");

                    b.ToTable("tinhthanh", (string)null);
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Tuyenduong", b =>
                {
                    b.Property<int>("IdTuyenDuong")
                        .HasColumnType("int")
                        .HasColumnName("ID_TuyenDuong");

                    b.Property<decimal?>("KhoangCach")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("Khoang_Cach");

                    b.Property<int?>("NoiDen")
                        .HasColumnType("int")
                        .HasColumnName("Noi_Den");

                    b.Property<int?>("NoiKhoiHanh")
                        .HasColumnType("int")
                        .HasColumnName("Noi_KhoiHanh");

                    b.HasKey("IdTuyenDuong")
                        .HasName("PK__tuyenduo__8D9665CDC1A77655");

                    b.HasIndex("NoiDen");

                    b.HasIndex("NoiKhoiHanh");

                    b.ToTable("tuyenduong", (string)null);
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Vexe", b =>
                {
                    b.Property<int>("IdVe")
                        .HasColumnType("int")
                        .HasColumnName("ID_Ve");

                    b.Property<decimal?>("GiaVe")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("Gia_Ve");

                    b.Property<int?>("IdChuyenXe")
                        .HasColumnType("int")
                        .HasColumnName("ID_ChuyenXe");

                    b.Property<int?>("IdPhieu")
                        .HasColumnType("int")
                        .HasColumnName("ID_Phieu");

                    b.Property<int?>("IdViTriGhe")
                        .HasColumnType("int")
                        .HasColumnName("ID_ViTriGhe");

                    b.Property<DateOnly?>("NgayKhoiHanh")
                        .HasColumnType("date")
                        .HasColumnName("Ngay_KhoiHanh");

                    b.Property<DateOnly?>("NgayVe")
                        .HasColumnType("date")
                        .HasColumnName("Ngay_Ve");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdVe")
                        .HasName("PK__vexe__8B63A19C63B2D04E");

                    b.HasIndex("IdChuyenXe");

                    b.HasIndex("IdPhieu");

                    b.HasIndex("IdViTriGhe");

                    b.ToTable("vexe", (string)null);
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Vitri", b =>
                {
                    b.Property<int>("IdViTriGhe")
                        .HasColumnType("int")
                        .HasColumnName("ID_ViTriGhe");

                    b.Property<int?>("IdXe")
                        .HasColumnType("int")
                        .HasColumnName("ID_Xe");

                    b.Property<string>("ViTri1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ViTri");

                    b.HasKey("IdViTriGhe")
                        .HasName("PK__vitri__F0FA263A8F933914");

                    b.HasIndex("IdXe");

                    b.ToTable("vitri", (string)null);
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Xe", b =>
                {
                    b.Property<int>("IdXe")
                        .HasColumnType("int")
                        .HasColumnName("ID_Xe");

                    b.Property<string>("BienSo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Bien_So");

                    b.Property<int?>("IdLoai")
                        .HasColumnType("int")
                        .HasColumnName("ID_Loai");

                    b.Property<string>("TinhTrang")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tinh_Trang");

                    b.HasKey("IdXe")
                        .HasName("PK__xe__8B62515E4D0DB79D");

                    b.HasIndex("IdLoai");

                    b.ToTable("xe", (string)null);
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Benxe", b =>
                {
                    b.HasOne("BookingWeb.Server.Models.Tinhthanh", "IdTinhThanhNavigation")
                        .WithMany("Benxes")
                        .HasForeignKey("IdTinhThanh")
                        .HasConstraintName("fk_benxe_tinhthanh");

                    b.Navigation("IdTinhThanhNavigation");
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Chuyenxe", b =>
                {
                    b.HasOne("BookingWeb.Server.Models.Tuyenduong", "IdTuyenDuongNavigation")
                        .WithMany("Chuyenxes")
                        .HasForeignKey("IdTuyenDuong")
                        .HasConstraintName("fk_chuyenxe_tuyenduong");

                    b.HasOne("BookingWeb.Server.Models.Xe", "IdXeNavigation")
                        .WithMany("Chuyenxes")
                        .HasForeignKey("IdXe")
                        .HasConstraintName("fk_chuyenxe_xe");

                    b.Navigation("IdTuyenDuongNavigation");

                    b.Navigation("IdXeNavigation");
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Nguoidung", b =>
                {
                    b.HasOne("BookingWeb.Server.Models.Taikhoan", "IdAccountNavigation")
                        .WithMany("Nguoidungs")
                        .HasForeignKey("IdAccount")
                        .HasConstraintName("fk_nguoidung_taikhoan");

                    b.Navigation("IdAccountNavigation");
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Phieudat", b =>
                {
                    b.HasOne("BookingWeb.Server.Models.Nguoidung", "IdUserNavigation")
                        .WithMany("Phieudats")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("fk_phieudat_nguoidung");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Taikhoan", b =>
                {
                    b.HasOne("BookingWeb.Server.Models.Phanquyen", "IdQuyenNavigation")
                        .WithMany("Taikhoans")
                        .HasForeignKey("IdQuyen")
                        .HasConstraintName("fk_taikhoan_phanquyen");

                    b.Navigation("IdQuyenNavigation");
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Thanhtoan", b =>
                {
                    b.HasOne("BookingWeb.Server.Models.Phieudat", "IdPhieuDatNavigation")
                        .WithMany("Thanhtoans")
                        .HasForeignKey("IdPhieuDat")
                        .HasConstraintName("fk_thanhtoan_phieudat");

                    b.Navigation("IdPhieuDatNavigation");
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Tuyenduong", b =>
                {
                    b.HasOne("BookingWeb.Server.Models.Benxe", "NoiDenNavigation")
                        .WithMany("TuyenduongNoiDenNavigations")
                        .HasForeignKey("NoiDen")
                        .HasConstraintName("fk_tuyenduong_noiden");

                    b.HasOne("BookingWeb.Server.Models.Benxe", "NoiKhoiHanhNavigation")
                        .WithMany("TuyenduongNoiKhoiHanhNavigations")
                        .HasForeignKey("NoiKhoiHanh")
                        .HasConstraintName("fk_tuyenduong_noikh");

                    b.Navigation("NoiDenNavigation");

                    b.Navigation("NoiKhoiHanhNavigation");
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Vexe", b =>
                {
                    b.HasOne("BookingWeb.Server.Models.Chuyenxe", "IdChuyenXeNavigation")
                        .WithMany("Vexes")
                        .HasForeignKey("IdChuyenXe")
                        .HasConstraintName("fk_vexe_chuyenxe");

                    b.HasOne("BookingWeb.Server.Models.Phieudat", "IdPhieuNavigation")
                        .WithMany("Vexes")
                        .HasForeignKey("IdPhieu")
                        .HasConstraintName("fk_vexe_phieudat");

                    b.HasOne("BookingWeb.Server.Models.Vitri", "IdViTriGheNavigation")
                        .WithMany("Vexes")
                        .HasForeignKey("IdViTriGhe")
                        .HasConstraintName("fk_vexe_vitri");

                    b.Navigation("IdChuyenXeNavigation");

                    b.Navigation("IdPhieuNavigation");

                    b.Navigation("IdViTriGheNavigation");
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Vitri", b =>
                {
                    b.HasOne("BookingWeb.Server.Models.Xe", "IdXeNavigation")
                        .WithMany("Vitris")
                        .HasForeignKey("IdXe")
                        .HasConstraintName("fk_vitri_xe");

                    b.Navigation("IdXeNavigation");
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Xe", b =>
                {
                    b.HasOne("BookingWeb.Server.Models.Loaixe", "IdLoaiNavigation")
                        .WithMany("Xes")
                        .HasForeignKey("IdLoai")
                        .HasConstraintName("fk_xe_loaixe");

                    b.Navigation("IdLoaiNavigation");
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Benxe", b =>
                {
                    b.Navigation("TuyenduongNoiDenNavigations");

                    b.Navigation("TuyenduongNoiKhoiHanhNavigations");
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Chuyenxe", b =>
                {
                    b.Navigation("Vexes");
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Loaixe", b =>
                {
                    b.Navigation("Xes");
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Nguoidung", b =>
                {
                    b.Navigation("Phieudats");
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Phanquyen", b =>
                {
                    b.Navigation("Taikhoans");
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Phieudat", b =>
                {
                    b.Navigation("Thanhtoans");

                    b.Navigation("Vexes");
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Taikhoan", b =>
                {
                    b.Navigation("Nguoidungs");
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Tinhthanh", b =>
                {
                    b.Navigation("Benxes");
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Tuyenduong", b =>
                {
                    b.Navigation("Chuyenxes");
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Vitri", b =>
                {
                    b.Navigation("Vexes");
                });

            modelBuilder.Entity("BookingWeb.Server.Models.Xe", b =>
                {
                    b.Navigation("Chuyenxes");

                    b.Navigation("Vitris");
                });
#pragma warning restore 612, 618
        }
    }
}
